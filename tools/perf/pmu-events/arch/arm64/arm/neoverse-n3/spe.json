[
    {
        "ArchStdEvent": "SAMPLE_POP",
        "PublicDescription": "Counts statistical profiling sample population, the count of all operations that could be sampled but may or may not be chosen for sampling."
    },
    {
        "ArchStdEvent": "SAMPLE_FEED",
        "PublicDescription": "Counts statistical profiling samples taken for sampling."
    },
    {
        "ArchStdEvent": "SAMPLE_FILTRATE",
        "PublicDescription": "Counts statistical profiling samples taken which are not removed by filtering."
    },
    {
        "ArchStdEvent": "SAMPLE_COLLISION",
        "PublicDescription": "Counts statistical profiling samples that have collided with a previous sample and so therefore not taken."
    },
    {
        "ArchStdEvent": "SAMPLE_FEED_BR",
        "PublicDescription": "Counts statistical profiling samples taken which are branches."
    },
    {
        "ArchStdEvent": "SAMPLE_FEED_LD",
        "PublicDescription": "Counts statistical profiling samples taken which are loads or load atomic operations."
    },
    {
        "ArchStdEvent": "SAMPLE_FEED_ST",
        "PublicDescription": "Counts statistical profiling samples taken which are stores or store atomic operations."
    },
    {
        "ArchStdEvent": "SAMPLE_FEED_OP",
        "PublicDescription": "Counts statistical profiling samples taken which are matching any operation type filters supported."
    },
    {
        "ArchStdEvent": "SAMPLE_FEED_EVENT",
        "PublicDescription": "Counts statistical profiling samples taken which are matching event packet filter constraints."
    },
    {
        "ArchStdEvent": "SAMPLE_FEED_LAT",
        "PublicDescription": "Counts statistical profiling samples taken which are exceeding minimum latency set by operation latency filter constraints."
    }
]
